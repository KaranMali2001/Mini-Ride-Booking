// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: booking.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createBooking = `-- name: CreateBooking :one
INSERT INTO bookings (
    booking_id, pickuploc_lat, pickuploc_lng, dropoff_lat, dropoff_lng, price, ride_status, driver_id, created_at
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8, $9
)
RETURNING booking_id, pickuploc_lat, pickuploc_lng, dropoff_lat, dropoff_lng, price, ride_status, driver_id, created_at
`

type CreateBookingParams struct {
	BookingID    pgtype.UUID
	PickuplocLat float64
	PickuplocLng float64
	DropoffLat   float64
	DropoffLng   float64
	Price        int32
	RideStatus   string
	DriverID     pgtype.UUID
	CreatedAt    pgtype.Timestamptz
}

func (q *Queries) CreateBooking(ctx context.Context, arg CreateBookingParams) (Booking, error) {
	row := q.db.QueryRow(ctx, createBooking,
		arg.BookingID,
		arg.PickuplocLat,
		arg.PickuplocLng,
		arg.DropoffLat,
		arg.DropoffLng,
		arg.Price,
		arg.RideStatus,
		arg.DriverID,
		arg.CreatedAt,
	)
	var i Booking
	err := row.Scan(
		&i.BookingID,
		&i.PickuplocLat,
		&i.PickuplocLng,
		&i.DropoffLat,
		&i.DropoffLng,
		&i.Price,
		&i.RideStatus,
		&i.DriverID,
		&i.CreatedAt,
	)
	return i, err
}

const getBookingByID = `-- name: GetBookingByID :one
SELECT booking_id, pickuploc_lat, pickuploc_lng, dropoff_lat, dropoff_lng, price, ride_status, driver_id, created_at FROM bookings
WHERE booking_id = $1
`

func (q *Queries) GetBookingByID(ctx context.Context, bookingID pgtype.UUID) (Booking, error) {
	row := q.db.QueryRow(ctx, getBookingByID, bookingID)
	var i Booking
	err := row.Scan(
		&i.BookingID,
		&i.PickuplocLat,
		&i.PickuplocLng,
		&i.DropoffLat,
		&i.DropoffLng,
		&i.Price,
		&i.RideStatus,
		&i.DriverID,
		&i.CreatedAt,
	)
	return i, err
}
